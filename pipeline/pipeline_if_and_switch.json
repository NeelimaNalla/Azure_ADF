{
	"name": "pipeline_if_and_switch",
	"properties": {
		"activities": [
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Switch1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.status,'pass')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "No input",
								"errorCode": "404"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.status",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "pass",
							"activities": [
								{
									"name": "Script1",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDB_ls",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": "SELECT TOP (1000) [source_database_name]\n      ,[source_table_name]\n      ,[source_system_name]\n      ,[load_type]\n      ,[active_state]\n      ,[target_location_path]\n      ,[target_object_name]\n  FROM [dbo].[configuration]"
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						},
						{
							"value": "pass2",
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"source_folder_name": "1",
											"destination_folder_name": "2"
										}
									}
								}
							]
						},
						{
							"value": "fail",
							"activities": [
								{
									"name": "Fail2",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "error in the code",
										"errorCode": "404"
									}
								}
							]
						},
						{
							"value": "exit",
							"activities": [
								{
									"name": "Wait3",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Wait2",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			}
		],
		"parameters": {
			"status": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-02-13T16:46:17Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}